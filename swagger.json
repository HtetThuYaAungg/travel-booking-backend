{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/swagger.json": {
      "get": {
        "operationId": "AppController_getJson",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          }
        },
        "summary": "Login user",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          }
        },
        "summary": "Logout user",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout-google": {
      "post": {
        "operationId": "AuthController_logoutGoogle",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User logged out from Google successfully"
          }
        },
        "summary": "Logout user from Google",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/google": {
      "get": {
        "operationId": "AuthController_googleAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Redirects to Google OAuth"
          }
        },
        "summary": "Initiate Google OAuth login",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/google/callback": {
      "get": {
        "operationId": "AuthController_googleAuthRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Google OAuth callback processed"
          }
        },
        "summary": "Google OAuth callback",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_getCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current user profile"
          }
        },
        "summary": "Get current user profile",
        "tags": [
          "Auth"
        ]
      }
    },
    "/user/refresh-token": {
      "post": {
        "operationId": "UserController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access new refresh token"
          }
        },
        "summary": "Refreshing new token",
        "tags": [
          "User"
        ]
      }
    },
    "/user/refresh-token-google": {
      "post": {
        "operationId": "UserController_refreshTokenGoogle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access new refresh token"
          }
        },
        "summary": "Refreshing new token",
        "tags": [
          "User"
        ]
      }
    },
    "/user/register": {
      "post": {
        "operationId": "UserController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/permissions": {
      "get": {
        "operationId": "UserController_getUserPermissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User Permissions"
          }
        },
        "summary": "Get user permission by ID",
        "tags": [
          "User"
        ]
      }
    },
    "/user/all": {
      "get": {
        "operationId": "UserController_getAllUsers",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "role_code",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "department_code",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "staff_id",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "full_name",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of users"
          }
        },
        "summary": "Get all users with filters",
        "tags": [
          "User"
        ]
      }
    },
    "/user/profile": {
      "get": {
        "operationId": "UserController_getCurrentUserProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User Profile"
          }
        },
        "summary": "Get a user profile",
        "tags": [
          "User"
        ]
      }
    },
    "/user/me/change-password": {
      "post": {
        "operationId": "UserController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          }
        },
        "summary": "Change current user password",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details"
          }
        },
        "summary": "Get a user by ID",
        "tags": [
          "User"
        ]
      },
      "patch": {
        "operationId": "UserController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          }
        },
        "summary": "Update a user",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          }
        },
        "summary": "Delete a user",
        "tags": [
          "User"
        ]
      }
    },
    "/role/new": {
      "post": {
        "operationId": "RoleController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleEntity"
                }
              }
            }
          }
        },
        "summary": "Create a new Role",
        "tags": [
          "Role"
        ]
      }
    },
    "/role/all": {
      "get": {
        "operationId": "RoleController_getAllRoles",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "role_code",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "role_name",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of roles"
          }
        },
        "summary": "Get all roles with filters",
        "tags": [
          "Role"
        ]
      }
    },
    "/role/common/all": {
      "get": {
        "operationId": "RoleController_getCommonRoles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List common of roles"
          }
        },
        "summary": "Get all common roles",
        "tags": [
          "Role"
        ]
      }
    },
    "/role/{id}": {
      "get": {
        "operationId": "RoleController_getRoleById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role details"
          }
        },
        "summary": "Get a role by ID",
        "tags": [
          "Role"
        ]
      },
      "patch": {
        "operationId": "RoleController_updateRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully"
          }
        },
        "summary": "Update a role",
        "tags": [
          "Role"
        ]
      },
      "delete": {
        "operationId": "RoleController_deleteRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully"
          }
        },
        "summary": "Delete a role",
        "tags": [
          "Role"
        ]
      }
    },
    "/role/{id}/permissions": {
      "get": {
        "operationId": "RoleController_getRolePermissions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role permissions retrieved successfully"
          }
        },
        "summary": "Get permissions for a role",
        "tags": [
          "Role"
        ]
      }
    },
    "/department/new": {
      "post": {
        "operationId": "DepartmentController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepartmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Department created successfully"
          }
        },
        "summary": "Create a new Department",
        "tags": [
          "Department"
        ]
      }
    },
    "/department/all": {
      "get": {
        "operationId": "DepartmentController_getAllDepartments",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "department_code",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "department_name",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of departments"
          }
        },
        "summary": "Get all departments with filters",
        "tags": [
          "Department"
        ]
      }
    },
    "/department/common/all": {
      "get": {
        "operationId": "DepartmentController_getCommonDepartments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List common of Department"
          }
        },
        "summary": "Get all common departments",
        "tags": [
          "Department"
        ]
      }
    },
    "/department/{id}": {
      "get": {
        "operationId": "DepartmentController_getDepartmentById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department details"
          }
        },
        "summary": "Get a department by ID",
        "tags": [
          "Department"
        ]
      },
      "patch": {
        "operationId": "DepartmentController_updateDepartment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDepartmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department updated successfully"
          }
        },
        "summary": "Update a department",
        "tags": [
          "Department"
        ]
      },
      "delete": {
        "operationId": "DepartmentController_deleteDepartment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department deleted successfully"
          }
        },
        "summary": "Delete a department",
        "tags": [
          "Department"
        ]
      }
    },
    "/permission/new": {
      "post": {
        "operationId": "PermissionController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission created successfully"
          }
        },
        "summary": "Create a new permission",
        "tags": [
          "Permission"
        ]
      }
    },
    "/permission/all": {
      "get": {
        "operationId": "PermissionController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "module",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions retrieved successfully"
          }
        },
        "summary": "Get all permissions with pagination",
        "tags": [
          "Permission"
        ]
      }
    },
    "/permission/modules": {
      "get": {
        "operationId": "PermissionController_getAllModules",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Modules retrieved successfully"
          }
        },
        "summary": "Get all modules",
        "tags": [
          "Permission"
        ]
      }
    },
    "/permission/module/{module}": {
      "get": {
        "operationId": "PermissionController_getPermissionsByModule",
        "parameters": [
          {
            "name": "module",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions retrieved successfully"
          }
        },
        "summary": "Get permissions by module",
        "tags": [
          "Permission"
        ]
      }
    },
    "/permission/{id}": {
      "get": {
        "operationId": "PermissionController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission retrieved successfully"
          }
        },
        "summary": "Get permission by ID",
        "tags": [
          "Permission"
        ]
      },
      "patch": {
        "operationId": "PermissionController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permission updated successfully"
          }
        },
        "summary": "Update permission",
        "tags": [
          "Permission"
        ]
      },
      "delete": {
        "operationId": "PermissionController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission deleted successfully"
          }
        },
        "summary": "Delete permission",
        "tags": [
          "Permission"
        ]
      }
    },
    "/counts": {
      "get": {
        "operationId": "CollectionCountController_getAllCounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get counts for user,role and department",
        "tags": [
          "CollectionCount"
        ]
      }
    },
    "/hotels": {
      "post": {
        "operationId": "HotelController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHotelDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Hotel created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Create a new hotel (Admin only)",
        "tags": [
          "Hotels"
        ]
      },
      "get": {
        "operationId": "HotelController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by name, location, or city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "description": "Filter by city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Filter by country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "required": false,
            "in": "query",
            "description": "Minimum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "required": false,
            "in": "query",
            "description": "Maximum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_star_rating",
            "required": false,
            "in": "query",
            "description": "Minimum star rating",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_rating",
            "required": false,
            "in": "query",
            "description": "Minimum rating",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "has_wifi",
            "required": false,
            "in": "query",
            "description": "Has WiFi",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_pool",
            "required": false,
            "in": "query",
            "description": "Has Pool",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_spa",
            "required": false,
            "in": "query",
            "description": "Has Spa",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_gym",
            "required": false,
            "in": "query",
            "description": "Has Gym",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_restaurant",
            "required": false,
            "in": "query",
            "description": "Has Restaurant",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_parking",
            "required": false,
            "in": "query",
            "description": "Has Parking",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_pet_friendly",
            "required": false,
            "in": "query",
            "description": "Pet Friendly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotels retrieved successfully"
          }
        },
        "summary": "Get all hotels with filtering and pagination",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/hotels/popular": {
      "get": {
        "operationId": "HotelController_getPopularHotels",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of hotels to return",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Popular hotels retrieved successfully"
          }
        },
        "summary": "Get popular hotels",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/hotels/location/{city}": {
      "get": {
        "operationId": "HotelController_getHotelsByLocation",
        "parameters": [
          {
            "name": "city",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of hotels to return",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotels retrieved successfully"
          }
        },
        "summary": "Get hotels by city",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/hotels/price-range": {
      "get": {
        "operationId": "HotelController_getHotelsByPriceRange",
        "parameters": [
          {
            "name": "min_price",
            "required": true,
            "in": "query",
            "description": "Minimum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "required": true,
            "in": "query",
            "description": "Maximum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of hotels to return",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotels retrieved successfully"
          }
        },
        "summary": "Get hotels by price range",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/hotels/amenities": {
      "get": {
        "operationId": "HotelController_getHotelsByAmenities",
        "parameters": [
          {
            "name": "amenities",
            "required": true,
            "in": "query",
            "description": "Comma-separated list of amenities",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of hotels to return",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotels retrieved successfully"
          }
        },
        "summary": "Get hotels by amenities",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/hotels/{id}": {
      "get": {
        "operationId": "HotelController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel retrieved successfully"
          },
          "404": {
            "description": "Hotel not found"
          }
        },
        "summary": "Get hotel by ID",
        "tags": [
          "Hotels"
        ]
      },
      "patch": {
        "operationId": "HotelController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHotelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hotel updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Hotel not found"
          }
        },
        "summary": "Update hotel (Admin only)",
        "tags": [
          "Hotels"
        ]
      },
      "delete": {
        "operationId": "HotelController_deleteHotel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Hotel not found"
          }
        },
        "summary": "Delete hotel (Admin only)",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/hotel-bookings": {
      "post": {
        "operationId": "HotelBookingController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHotelBookingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Hotel booking created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Hotel not found"
          }
        },
        "summary": "Create a new hotel booking",
        "tags": [
          "Hotel Bookings"
        ]
      },
      "get": {
        "operationId": "HotelBookingController_findAll",
        "parameters": [
          {
            "name": "customer_name",
            "required": false,
            "in": "query",
            "description": "Filter by customer name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_email",
            "required": false,
            "in": "query",
            "description": "Filter by customer email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hotel_id",
            "required": false,
            "in": "query",
            "description": "Filter by hotel ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_guests",
            "required": false,
            "in": "query",
            "description": "Filter by minimum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_guests",
            "required": false,
            "in": "query",
            "description": "Filter by maximum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by minimum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by maximum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel bookings retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Get all hotel bookings with filters",
        "tags": [
          "Hotel Bookings"
        ]
      }
    },
    "/hotel-bookings/my-bookings": {
      "get": {
        "operationId": "HotelBookingController_findMyBookings",
        "parameters": [
          {
            "name": "customer_name",
            "required": false,
            "in": "query",
            "description": "Filter by customer name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_email",
            "required": false,
            "in": "query",
            "description": "Filter by customer email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hotel_id",
            "required": false,
            "in": "query",
            "description": "Filter by hotel ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_guests",
            "required": false,
            "in": "query",
            "description": "Filter by minimum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_guests",
            "required": false,
            "in": "query",
            "description": "Filter by maximum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by minimum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by maximum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User hotel bookings retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Get current user hotel bookings",
        "tags": [
          "Hotel Bookings"
        ]
      }
    },
    "/hotel-bookings/pending": {
      "get": {
        "operationId": "HotelBookingController_findPendingBookings",
        "parameters": [
          {
            "name": "customer_name",
            "required": false,
            "in": "query",
            "description": "Filter by customer name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_email",
            "required": false,
            "in": "query",
            "description": "Filter by customer email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hotel_id",
            "required": false,
            "in": "query",
            "description": "Filter by hotel ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_guests",
            "required": false,
            "in": "query",
            "description": "Filter by minimum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_guests",
            "required": false,
            "in": "query",
            "description": "Filter by maximum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by minimum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by maximum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pending hotel bookings retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Get all pending hotel bookings",
        "tags": [
          "Hotel Bookings"
        ]
      }
    },
    "/hotel-bookings/hotel/{hotelId}": {
      "get": {
        "operationId": "HotelBookingController_findByHotel",
        "parameters": [
          {
            "name": "hotelId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_name",
            "required": false,
            "in": "query",
            "description": "Filter by customer name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_email",
            "required": false,
            "in": "query",
            "description": "Filter by customer email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hotel_id",
            "required": false,
            "in": "query",
            "description": "Filter by hotel ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_in_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-in date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_from",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "check_out_date_to",
            "required": false,
            "in": "query",
            "description": "Filter by check-out date to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_guests",
            "required": false,
            "in": "query",
            "description": "Filter by minimum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_guests",
            "required": false,
            "in": "query",
            "description": "Filter by maximum guests",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by minimum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_rooms",
            "required": false,
            "in": "query",
            "description": "Filter by maximum rooms",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel bookings retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Get hotel bookings for a specific hotel",
        "tags": [
          "Hotel Bookings"
        ]
      }
    },
    "/hotel-bookings/{id}": {
      "get": {
        "operationId": "HotelBookingController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel booking retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Hotel booking not found"
          }
        },
        "summary": "Get a hotel booking by ID",
        "tags": [
          "Hotel Bookings"
        ]
      },
      "patch": {
        "operationId": "HotelBookingController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHotelBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hotel booking updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Hotel booking not found"
          }
        },
        "summary": "Update a hotel booking",
        "tags": [
          "Hotel Bookings"
        ]
      },
      "delete": {
        "operationId": "HotelBookingController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Hotel booking deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Hotel booking not found"
          }
        },
        "summary": "Delete a hotel booking",
        "tags": [
          "Hotel Bookings"
        ]
      }
    },
    "/hotel-bookings/{id}/approve": {
      "patch": {
        "operationId": "HotelBookingController_approveBooking",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel booking approved successfully"
          },
          "400": {
            "description": "Bad request - booking cannot be approved"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pending booking not found"
          }
        },
        "summary": "Approve a pending hotel booking",
        "tags": [
          "Hotel Bookings"
        ]
      }
    },
    "/hotel-bookings/{id}/reject": {
      "patch": {
        "operationId": "HotelBookingController_rejectBooking",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel booking rejected successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pending booking not found"
          }
        },
        "summary": "Reject a pending hotel booking",
        "tags": [
          "Hotel Bookings"
        ]
      }
    },
    "/flights": {
      "post": {
        "operationId": "FlightController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFlightDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Flight created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "summary": "Create a new flight",
        "tags": [
          "Flights"
        ]
      },
      "get": {
        "operationId": "FlightController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by flight number, airline name, or airport codes",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure_airport_code",
            "required": false,
            "in": "query",
            "description": "Departure airport code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival_airport_code",
            "required": false,
            "in": "query",
            "description": "Arrival airport code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure_city",
            "required": false,
            "in": "query",
            "description": "Departure city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival_city",
            "required": false,
            "in": "query",
            "description": "Arrival city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "airline_name",
            "required": false,
            "in": "query",
            "description": "Airline name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "airline_code",
            "required": false,
            "in": "query",
            "description": "Airline code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure_date",
            "required": false,
            "in": "query",
            "description": "Departure date (ISO 8601 format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "required": false,
            "in": "query",
            "description": "Minimum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "required": false,
            "in": "query",
            "description": "Maximum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "class_type",
            "required": false,
            "in": "query",
            "description": "Flight class type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_wifi",
            "required": false,
            "in": "query",
            "description": "Has WiFi",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_meal",
            "required": false,
            "in": "query",
            "description": "Has meal service",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_domestic",
            "required": false,
            "in": "query",
            "description": "Is domestic flight",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "min_available_seats",
            "required": false,
            "in": "query",
            "description": "Minimum available seats",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flights retrieved successfully"
          }
        },
        "summary": "Get all flights with filtering and pagination",
        "tags": [
          "Flights"
        ]
      }
    },
    "/flights/search": {
      "get": {
        "operationId": "FlightController_searchFlights",
        "parameters": [
          {
            "name": "departure",
            "required": true,
            "in": "query",
            "description": "Departure airport code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "required": true,
            "in": "query",
            "description": "Arrival airport code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "query",
            "description": "Departure date (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passengers",
            "required": false,
            "in": "query",
            "description": "Number of passengers",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "returnDate",
            "required": false,
            "in": "query",
            "description": "Return date for round-trip",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight search results"
          }
        },
        "summary": "Search flights by route and date",
        "tags": [
          "Flights"
        ]
      }
    },
    "/flights/airlines": {
      "get": {
        "operationId": "FlightController_getAirlines",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Airlines retrieved successfully"
          }
        },
        "summary": "Get list of available airlines",
        "tags": [
          "Flights"
        ]
      }
    },
    "/flights/popular-routes": {
      "get": {
        "operationId": "FlightController_getPopularRoutes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Popular routes retrieved successfully"
          }
        },
        "summary": "Get popular flight routes",
        "tags": [
          "Flights"
        ]
      }
    },
    "/flights/{id}": {
      "get": {
        "operationId": "FlightController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight retrieved successfully"
          },
          "404": {
            "description": "Flight not found"
          }
        },
        "summary": "Get flight by ID",
        "tags": [
          "Flights"
        ]
      },
      "patch": {
        "operationId": "FlightController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFlightDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flight updated successfully"
          },
          "404": {
            "description": "Flight not found"
          }
        },
        "summary": "Update flight",
        "tags": [
          "Flights"
        ]
      },
      "delete": {
        "operationId": "FlightController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Flight deleted successfully"
          },
          "404": {
            "description": "Flight not found"
          }
        },
        "summary": "Delete flight",
        "tags": [
          "Flights"
        ]
      }
    },
    "/flight-bookings": {
      "post": {
        "operationId": "FlightBookingController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFlightBookingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Flight booking created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "summary": "Create a new flight booking",
        "tags": [
          "Flight Bookings"
        ]
      },
      "get": {
        "operationId": "FlightBookingController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by booking reference, customer name, or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "booking_reference",
            "required": false,
            "in": "query",
            "description": "Booking reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_name",
            "required": false,
            "in": "query",
            "description": "Customer name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_email",
            "required": false,
            "in": "query",
            "description": "Customer email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flight_id",
            "required": false,
            "in": "query",
            "description": "Flight ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure_date",
            "required": false,
            "in": "query",
            "description": "Departure date (ISO 8601 format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "return_date",
            "required": false,
            "in": "query",
            "description": "Return date (ISO 8601 format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "required": false,
            "in": "query",
            "description": "Minimum total price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "required": false,
            "in": "query",
            "description": "Maximum total price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Booking status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_status",
            "required": false,
            "in": "query",
            "description": "Payment status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "Currency",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_round_trip",
            "required": false,
            "in": "query",
            "description": "Is round trip",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight bookings retrieved successfully"
          }
        },
        "summary": "Get all flight bookings with filtering and pagination",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/my-bookings": {
      "get": {
        "operationId": "FlightBookingController_getMyBookings",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by booking reference, customer name, or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "booking_reference",
            "required": false,
            "in": "query",
            "description": "Booking reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_name",
            "required": false,
            "in": "query",
            "description": "Customer name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer_email",
            "required": false,
            "in": "query",
            "description": "Customer email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flight_id",
            "required": false,
            "in": "query",
            "description": "Flight ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure_date",
            "required": false,
            "in": "query",
            "description": "Departure date (ISO 8601 format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "return_date",
            "required": false,
            "in": "query",
            "description": "Return date (ISO 8601 format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_price",
            "required": false,
            "in": "query",
            "description": "Minimum total price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_price",
            "required": false,
            "in": "query",
            "description": "Maximum total price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Booking status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_status",
            "required": false,
            "in": "query",
            "description": "Payment status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "Currency",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_round_trip",
            "required": false,
            "in": "query",
            "description": "Is round trip",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User flight bookings retrieved successfully"
          }
        },
        "summary": "Get current user flight bookings",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/statistics": {
      "get": {
        "operationId": "FlightBookingController_getStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully"
          }
        },
        "summary": "Get flight booking statistics",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/reference/{reference}": {
      "get": {
        "operationId": "FlightBookingController_findByReference",
        "parameters": [
          {
            "name": "reference",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight booking retrieved successfully"
          },
          "404": {
            "description": "Flight booking not found"
          }
        },
        "summary": "Get flight booking by reference number",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/{id}": {
      "get": {
        "operationId": "FlightBookingController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight booking retrieved successfully"
          },
          "404": {
            "description": "Flight booking not found"
          }
        },
        "summary": "Get flight booking by ID",
        "tags": [
          "Flight Bookings"
        ]
      },
      "patch": {
        "operationId": "FlightBookingController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFlightBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flight booking updated successfully"
          },
          "404": {
            "description": "Flight booking not found"
          }
        },
        "summary": "Update flight booking",
        "tags": [
          "Flight Bookings"
        ]
      },
      "delete": {
        "operationId": "FlightBookingController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Flight booking deleted successfully"
          },
          "404": {
            "description": "Flight booking not found"
          }
        },
        "summary": "Delete flight booking",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/{id}/status": {
      "patch": {
        "operationId": "FlightBookingController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking status updated successfully"
          },
          "400": {
            "description": "Invalid status"
          }
        },
        "summary": "Update flight booking status",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/{id}/payment-status": {
      "patch": {
        "operationId": "FlightBookingController_updatePaymentStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment status updated successfully"
          },
          "400": {
            "description": "Invalid payment status"
          }
        },
        "summary": "Update flight booking payment status",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/{id}/approve": {
      "patch": {
        "operationId": "FlightBookingController_approveBooking",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight booking approved successfully"
          },
          "400": {
            "description": "Bad request - booking cannot be approved"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pending booking not found"
          }
        },
        "summary": "Approve a pending flight booking",
        "tags": [
          "Flight Bookings"
        ]
      }
    },
    "/flight-bookings/{id}/reject": {
      "patch": {
        "operationId": "FlightBookingController_rejectBooking",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight booking rejected successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pending booking not found"
          }
        },
        "summary": "Reject a pending flight booking",
        "tags": [
          "Flight Bookings"
        ]
      }
    }
  },
  "info": {
    "title": "Travel Booking API Documentation",
    "description": "API documentation for Travel Booking",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "jwt": {
        "scheme": "Bearer",
        "bearerFormat": "Bearer",
        "description": "[just text field] Please enter token in following format: Bearer <JWT>",
        "name": "Authorization",
        "type": "http",
        "in": "Header"
      }
    },
    "schemas": {
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "Admin@123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "staff_id": {
            "type": "string",
            "example": "user123"
          },
          "full_name": {
            "type": "string",
            "example": "John Doe"
          },
          "password": {
            "type": "string",
            "example": "securepassword"
          },
          "confirm_password": {
            "type": "string",
            "example": "securepassword"
          },
          "status": {
            "type": "string",
            "example": "Active",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING",
              "APPROVED",
              "REJECTED",
              "DELETE"
            ],
            "default": "ACTIVE"
          },
          "user_type": {
            "type": "string",
            "example": "Maker",
            "enum": [
              "MAKER",
              "CHECKER"
            ],
            "default": "MAKER"
          },
          "department_code": {
            "type": "string",
            "example": "dept01"
          },
          "role_code": {
            "type": "string",
            "example": "role01"
          }
        },
        "required": [
          "email",
          "staff_id",
          "full_name",
          "password",
          "confirm_password",
          "status",
          "user_type",
          "department_code",
          "role_code"
        ]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string",
            "example": "currentpassword123"
          },
          "new_password": {
            "type": "string",
            "example": "newpassword123"
          },
          "confirm_new_password": {
            "type": "string",
            "example": "newpassword123"
          }
        },
        "required": [
          "current_password",
          "new_password",
          "confirm_new_password"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "staff_id": {
            "type": "string",
            "example": "user123"
          },
          "full_name": {
            "type": "string",
            "example": "John Doe"
          },
          "password": {
            "type": "string",
            "example": "securepassword"
          },
          "confirm_password": {
            "type": "string",
            "example": "securepassword"
          },
          "status": {
            "type": "string",
            "example": "Active",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING",
              "APPROVED",
              "REJECTED",
              "DELETE"
            ],
            "default": "ACTIVE"
          },
          "user_type": {
            "type": "string",
            "example": "Maker",
            "enum": [
              "MAKER",
              "CHECKER"
            ],
            "default": "MAKER"
          },
          "department_code": {
            "type": "string",
            "example": "dept01"
          },
          "role_code": {
            "type": "string",
            "example": "role01"
          }
        }
      },
      "PermissionDto": {
        "type": "object",
        "properties": {}
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "role_code": {
            "type": "string",
            "example": "ROLE001"
          },
          "role_name": {
            "type": "string",
            "example": "Administrator"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          }
        },
        "required": [
          "role_code",
          "role_name",
          "permissions"
        ]
      },
      "RoleEntity": {
        "type": "object",
        "properties": {}
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "role_code": {
            "type": "string",
            "example": "ROLE001"
          },
          "role_name": {
            "type": "string",
            "example": "Administrator"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          }
        }
      },
      "CreateDepartmentDto": {
        "type": "object",
        "properties": {
          "department_code": {
            "type": "string",
            "example": "IT"
          },
          "department_name": {
            "type": "string",
            "example": "Information Technology"
          }
        },
        "required": [
          "department_code",
          "department_name"
        ]
      },
      "UpdateDepartmentDto": {
        "type": "object",
        "properties": {
          "department_code": {
            "type": "string",
            "example": "IT"
          },
          "department_name": {
            "type": "string",
            "example": "Information Technology"
          }
        }
      },
      "CreatePermissionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Create users",
            "description": "Permission description"
          },
          "module": {
            "type": "string",
            "example": "users",
            "description": "Module name"
          },
          "action": {
            "type": "string",
            "example": "create",
            "description": "Action name"
          }
        },
        "required": [
          "description",
          "module",
          "action"
        ]
      },
      "UpdatePermissionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Create users",
            "description": "Permission description"
          },
          "module": {
            "type": "string",
            "example": "users",
            "description": "Module name"
          },
          "action": {
            "type": "string",
            "example": "create",
            "description": "Action name"
          }
        }
      },
      "CreateHotelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Hotel name"
          },
          "description": {
            "type": "string",
            "description": "Hotel description"
          },
          "location": {
            "type": "string",
            "description": "Hotel location"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "price": {
            "type": "number",
            "description": "Price per night"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          },
          "rating": {
            "type": "number",
            "description": "Hotel rating (0-5)",
            "minimum": 0,
            "maximum": 5
          },
          "star_rating": {
            "type": "number",
            "description": "Star rating (1-5)",
            "minimum": 1,
            "maximum": 5
          },
          "amenities": {
            "description": "Hotel amenities",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "description": "Hotel images URLs",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_wifi": {
            "type": "boolean",
            "description": "Has WiFi"
          },
          "has_pool": {
            "type": "boolean",
            "description": "Has Pool"
          },
          "has_spa": {
            "type": "boolean",
            "description": "Has Spa"
          },
          "has_gym": {
            "type": "boolean",
            "description": "Has Gym"
          },
          "has_restaurant": {
            "type": "boolean",
            "description": "Has Restaurant"
          },
          "has_parking": {
            "type": "boolean",
            "description": "Has Parking"
          },
          "has_pet_friendly": {
            "type": "boolean",
            "description": "Pet Friendly"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "website": {
            "type": "string",
            "description": "Website URL"
          },
          "address": {
            "type": "string",
            "description": "Address"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "name",
          "description",
          "location",
          "city",
          "country",
          "price",
          "currency",
          "rating",
          "star_rating"
        ]
      },
      "UpdateHotelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Hotel name"
          },
          "description": {
            "type": "string",
            "description": "Hotel description"
          },
          "location": {
            "type": "string",
            "description": "Hotel location"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "price": {
            "type": "number",
            "description": "Price per night"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          },
          "rating": {
            "type": "number",
            "description": "Hotel rating (0-5)",
            "minimum": 0,
            "maximum": 5
          },
          "star_rating": {
            "type": "number",
            "description": "Star rating (1-5)",
            "minimum": 1,
            "maximum": 5
          },
          "amenities": {
            "description": "Hotel amenities",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "description": "Hotel images URLs",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_wifi": {
            "type": "boolean",
            "description": "Has WiFi"
          },
          "has_pool": {
            "type": "boolean",
            "description": "Has Pool"
          },
          "has_spa": {
            "type": "boolean",
            "description": "Has Spa"
          },
          "has_gym": {
            "type": "boolean",
            "description": "Has Gym"
          },
          "has_restaurant": {
            "type": "boolean",
            "description": "Has Restaurant"
          },
          "has_parking": {
            "type": "boolean",
            "description": "Has Parking"
          },
          "has_pet_friendly": {
            "type": "boolean",
            "description": "Pet Friendly"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "website": {
            "type": "string",
            "description": "Website URL"
          },
          "address": {
            "type": "string",
            "description": "Address"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude"
          }
        }
      },
      "CreateHotelBookingDto": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string",
            "description": "Customer name"
          },
          "customerEmail": {
            "type": "string",
            "description": "Customer email"
          },
          "checkInDate": {
            "type": "string",
            "description": "Check-in date"
          },
          "checkOutDate": {
            "type": "string",
            "description": "Check-out date"
          },
          "guests": {
            "type": "number",
            "description": "Number of guests",
            "minimum": 1,
            "default": 1
          },
          "rooms": {
            "type": "number",
            "description": "Number of rooms",
            "minimum": 1,
            "default": 1
          },
          "specialRequests": {
            "type": "string",
            "description": "Special requests"
          },
          "hotelId": {
            "type": "string",
            "description": "Hotel ID"
          }
        },
        "required": [
          "customerName",
          "customerEmail",
          "checkInDate",
          "checkOutDate",
          "guests",
          "rooms",
          "hotelId"
        ]
      },
      "UpdateHotelBookingDto": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string",
            "description": "Customer name"
          },
          "customerEmail": {
            "type": "string",
            "description": "Customer email"
          },
          "checkInDate": {
            "type": "string",
            "description": "Check-in date"
          },
          "checkOutDate": {
            "type": "string",
            "description": "Check-out date"
          },
          "guests": {
            "type": "number",
            "description": "Number of guests",
            "minimum": 1,
            "default": 1
          },
          "rooms": {
            "type": "number",
            "description": "Number of rooms",
            "minimum": 1,
            "default": 1
          },
          "specialRequests": {
            "type": "string",
            "description": "Special requests"
          },
          "hotelId": {
            "type": "string",
            "description": "Hotel ID"
          }
        }
      },
      "CreateFlightDto": {
        "type": "object",
        "properties": {
          "flight_number": {
            "type": "string",
            "description": "Flight number (e.g., 8M335, K7242)"
          },
          "airline_name": {
            "type": "string",
            "description": "Airline name (e.g., Myanmar Airways International)"
          },
          "airline_code": {
            "type": "string",
            "description": "Airline code (e.g., 8M, K7)"
          },
          "aircraft_type": {
            "type": "string",
            "description": "Aircraft type (e.g., ATR 72, Embraer E190)"
          },
          "departure_airport_code": {
            "type": "string",
            "description": "Departure airport code (e.g., RGN)"
          },
          "departure_airport_name": {
            "type": "string",
            "description": "Departure airport name (e.g., Yangon)"
          },
          "departure_city": {
            "type": "string",
            "description": "Departure city"
          },
          "departure_country": {
            "type": "string",
            "description": "Departure country"
          },
          "arrival_airport_code": {
            "type": "string",
            "description": "Arrival airport code (e.g., MDL)"
          },
          "arrival_airport_name": {
            "type": "string",
            "description": "Arrival airport name (e.g., Mandalay)"
          },
          "arrival_city": {
            "type": "string",
            "description": "Arrival city"
          },
          "arrival_country": {
            "type": "string",
            "description": "Arrival country"
          },
          "departure_time": {
            "type": "string",
            "description": "Departure time (ISO 8601 format)"
          },
          "arrival_time": {
            "type": "string",
            "description": "Arrival time (ISO 8601 format)"
          },
          "duration_minutes": {
            "type": "number",
            "description": "Flight duration in minutes"
          },
          "base_price": {
            "type": "number",
            "description": "Base price of the flight"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          },
          "available_seats": {
            "type": "number",
            "description": "Number of available seats"
          },
          "total_seats": {
            "type": "number",
            "description": "Total number of seats",
            "default": 100
          },
          "class_type": {
            "type": "string",
            "description": "Flight class type",
            "default": "Economy"
          },
          "has_wifi": {
            "type": "boolean",
            "description": "Has WiFi",
            "default": false
          },
          "has_meal": {
            "type": "boolean",
            "description": "Has meal service",
            "default": false
          },
          "has_entertainment": {
            "type": "boolean",
            "description": "Has entertainment",
            "default": false
          },
          "has_luggage": {
            "type": "boolean",
            "description": "Has luggage allowance",
            "default": true
          },
          "is_domestic": {
            "type": "boolean",
            "description": "Is domestic flight",
            "default": true
          }
        },
        "required": [
          "flight_number",
          "airline_name",
          "airline_code",
          "aircraft_type",
          "departure_airport_code",
          "departure_airport_name",
          "departure_city",
          "departure_country",
          "arrival_airport_code",
          "arrival_airport_name",
          "arrival_city",
          "arrival_country",
          "departure_time",
          "arrival_time",
          "duration_minutes",
          "base_price",
          "currency",
          "available_seats",
          "total_seats",
          "class_type",
          "has_wifi",
          "has_meal",
          "has_entertainment",
          "has_luggage",
          "is_domestic"
        ]
      },
      "UpdateFlightDto": {
        "type": "object",
        "properties": {
          "flight_number": {
            "type": "string",
            "description": "Flight number (e.g., 8M335, K7242)"
          },
          "airline_name": {
            "type": "string",
            "description": "Airline name (e.g., Myanmar Airways International)"
          },
          "airline_code": {
            "type": "string",
            "description": "Airline code (e.g., 8M, K7)"
          },
          "aircraft_type": {
            "type": "string",
            "description": "Aircraft type (e.g., ATR 72, Embraer E190)"
          },
          "departure_airport_code": {
            "type": "string",
            "description": "Departure airport code (e.g., RGN)"
          },
          "departure_airport_name": {
            "type": "string",
            "description": "Departure airport name (e.g., Yangon)"
          },
          "departure_city": {
            "type": "string",
            "description": "Departure city"
          },
          "departure_country": {
            "type": "string",
            "description": "Departure country"
          },
          "arrival_airport_code": {
            "type": "string",
            "description": "Arrival airport code (e.g., MDL)"
          },
          "arrival_airport_name": {
            "type": "string",
            "description": "Arrival airport name (e.g., Mandalay)"
          },
          "arrival_city": {
            "type": "string",
            "description": "Arrival city"
          },
          "arrival_country": {
            "type": "string",
            "description": "Arrival country"
          },
          "departure_time": {
            "type": "string",
            "description": "Departure time (ISO 8601 format)"
          },
          "arrival_time": {
            "type": "string",
            "description": "Arrival time (ISO 8601 format)"
          },
          "duration_minutes": {
            "type": "number",
            "description": "Flight duration in minutes"
          },
          "base_price": {
            "type": "number",
            "description": "Base price of the flight"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          },
          "available_seats": {
            "type": "number",
            "description": "Number of available seats"
          },
          "total_seats": {
            "type": "number",
            "description": "Total number of seats",
            "default": 100
          },
          "class_type": {
            "type": "string",
            "description": "Flight class type",
            "default": "Economy"
          },
          "has_wifi": {
            "type": "boolean",
            "description": "Has WiFi",
            "default": false
          },
          "has_meal": {
            "type": "boolean",
            "description": "Has meal service",
            "default": false
          },
          "has_entertainment": {
            "type": "boolean",
            "description": "Has entertainment",
            "default": false
          },
          "has_luggage": {
            "type": "boolean",
            "description": "Has luggage allowance",
            "default": true
          },
          "is_domestic": {
            "type": "boolean",
            "description": "Is domestic flight",
            "default": true
          }
        }
      },
      "PassengerDto": {
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string",
            "description": "Passenger full name"
          },
          "age": {
            "type": "number",
            "description": "Passenger age"
          },
          "type": {
            "type": "string",
            "description": "Passenger type",
            "enum": [
              "adult",
              "child",
              "infant"
            ]
          },
          "seat_preference": {
            "type": "string",
            "description": "Seat preference"
          },
          "meal_preference": {
            "type": "string",
            "description": "Meal preference"
          },
          "special_requests": {
            "type": "string",
            "description": "Special requests"
          }
        },
        "required": [
          "full_name",
          "age",
          "type"
        ]
      },
      "CreateFlightBookingDto": {
        "type": "object",
        "properties": {
          "flight_id": {
            "type": "string",
            "description": "Flight ID"
          },
          "customer_name": {
            "type": "string",
            "description": "Customer full name"
          },
          "customer_email": {
            "type": "string",
            "description": "Customer email"
          },
          "customer_phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "passengers": {
            "description": "Array of passengers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PassengerDto"
            }
          },
          "departure_date": {
            "type": "string",
            "description": "Departure date (ISO 8601 format)"
          },
          "return_date": {
            "type": "string",
            "description": "Return date for round-trip flights"
          },
          "base_price": {
            "type": "number",
            "description": "Base price"
          },
          "taxes_fees": {
            "type": "number",
            "description": "Taxes and fees",
            "default": 0
          },
          "discounts": {
            "type": "number",
            "description": "Discounts applied",
            "default": 0
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          },
          "seat_preferences": {
            "description": "Seat preferences",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meal_preferences": {
            "description": "Meal preferences",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "special_requests": {
            "type": "string",
            "description": "Special requests"
          },
          "payment_status": {
            "type": "string",
            "description": "Payment status",
            "default": "PENDING"
          }
        },
        "required": [
          "flight_id",
          "customer_name",
          "customer_email",
          "passengers",
          "departure_date",
          "base_price",
          "taxes_fees",
          "discounts",
          "currency",
          "payment_status"
        ]
      },
      "UpdateFlightBookingDto": {
        "type": "object",
        "properties": {
          "flight_id": {
            "type": "string",
            "description": "Flight ID"
          },
          "customer_name": {
            "type": "string",
            "description": "Customer full name"
          },
          "customer_email": {
            "type": "string",
            "description": "Customer email"
          },
          "customer_phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "passengers": {
            "description": "Array of passengers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PassengerDto"
            }
          },
          "departure_date": {
            "type": "string",
            "description": "Departure date (ISO 8601 format)"
          },
          "return_date": {
            "type": "string",
            "description": "Return date for round-trip flights"
          },
          "base_price": {
            "type": "number",
            "description": "Base price"
          },
          "taxes_fees": {
            "type": "number",
            "description": "Taxes and fees",
            "default": 0
          },
          "discounts": {
            "type": "number",
            "description": "Discounts applied",
            "default": 0
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          },
          "seat_preferences": {
            "description": "Seat preferences",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meal_preferences": {
            "description": "Meal preferences",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "special_requests": {
            "type": "string",
            "description": "Special requests"
          },
          "payment_status": {
            "type": "string",
            "description": "Payment status",
            "default": "PENDING"
          }
        }
      }
    }
  },
  "security": [
    {
      "jwt": []
    }
  ]
}